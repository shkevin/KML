[build-system]
requires = ["setuptools>=61.0.0",
            "wheel",
            "Cython>=0.29.22",
            "setuptools_scm[toml]>=6.2",
            "toml"]
build-backend = "setuptools.build_meta"

[project]
name = "kml"
authors = [{name = "Kevin Cox", email = "shk3vin7@gmail.com"}]
maintainers = [{name = "Kevin Cox", email = "shk3vin7@gmail.com"}]
readme = "README.rst"
description="Streaming/Online Machine Learning in C++/Cython."
classifiers=[
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11.0",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Operating System :: MacOS",
    "Operating System :: Unix"]
requires-python = ">=3.7,<=3.11"
dependencies = []
dynamic = ["version"]

[project.urls]
Source = "https://github.com/shkevin/KML"
Homepage = "https://github.com/shkevin/KML"

[project.optional-dependencies]
test = ["tox>=3.23.1",
        "pytest>=6.2.3,<6.3.0",
        "pytest-xdist>=2.5.0,<2.6.0",
        "pytest-clarity==1.0.1",
        "pytest-cov==3.0.0"]
dev = ["black>=22.0.0,<23.0.0",
       "flake8>=3.9.0,<3.10.0",
       "mypy==0.812",
       "isort==5.8.0",
       "yapf>=0.32.0",
       "pyproject-flake8>=5.0.0",
       "pydocstyle>=6.1.1",
       "toml==0.10.1",
       "pylint>=2.0.0"]
docs = ["sphinx", "sphinx_rtd_theme", "sphinx_sitemap",
        "breathe", "exhale", "sphinx_gallery", "nbsphinx",
        "nbconvert", "pandoc", "IPython"]

[tool.setuptools.package-data]
kml = ["*.rst"]

[tool.setuptools.exclude-package-data]
kml = [".gitattributes", "build"]

[tool.setuptools_scm]
write_to = "tools/cython/kml/_version.py"
version_scheme = "release-branch-semver"

[tool.coverage.run]
branch = true
parallel = true
omit = ["build/*", "tools/cython/kml/_version.py"]

[tool.coverage.report]
precision = 2
omit = ["build/*", "tools/cython/kml/_version.py"]

[tool.mypy]
warn_unreachable = true
warn_unused_ignores = true
follow_imports = "skip"
show_error_context = true
warn_incomplete_stub = true
ignore_missing_imports = true
check_untyped_defs = true
cache_dir = "/dev/null"
warn_redundant_casts = true
warn_unused_configs = true
strict_optional = true
plugins = ["pydantic.mypy"]

# Flake8 doesn't use pyproject yet. This is just here for reference.
[tool.flake8]
filename = ["*.py", "*.pxd", "*.pyx"]
max-line-length = 100
extend-ignore = ["E999"]
per-file-ignores = """
        __init__.py: F401
    """

[tool.pylint]
max-line-length = 100
disable = [
    # "C0103", # (invalid-name)
    # "C0114", # (missing-module-docstring)
    # "C0115", # (missing-class-docstring)
    # "C0116", # (missing-function-docstring)
    # "R0903", # (too-few-public-methods)
    # "R0913", # (too-many-arguments)
    # "W0105", # (pointless-string-statement)
    "E0401",   # (Unable to import)
    "E0611",   # (No name)
    "W0406",   # (Module import self)
    ]

[tool.pytest.ini_options]
addopts = "-doctest --cov-report term --cov-fail-under 95"
minversion = "2.0"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test", "Acceptance"]
python_functions = ["test"]
# testpaths = ["./tools/python/"]
xfail_strict = true
filterwarnings = [
    "error",
    "default:Using or importing the ABCs:DeprecationWarning:unittest2.*",
    # produced by older pyparsing<=2.2.0.
    "default:Using or importing the ABCs:DeprecationWarning:pyparsing.*",
    "default:the imp module is deprecated in favour of importlib:DeprecationWarning:nose.*",
    # distutils is deprecated in 3.10, scheduled for removal in 3.12
    "ignore:The distutils package is deprecated:DeprecationWarning",
    # produced by python3.6/site.py itself (3.6.7 on Travis, could not trigger it with 3.6.8)."
    "ignore:.*U.*mode is deprecated:DeprecationWarning:(?!(pytest|_pytest))",
    # produced by pytest-xdist
    "ignore:.*type argument to addoption.*:DeprecationWarning",
    # produced on execnet (pytest-xdist)
    "ignore:.*inspect.getargspec.*deprecated, use inspect.signature.*:DeprecationWarning",
    # pytest's own futurewarnings
    "ignore::pytest.PytestExperimentalApiWarning",
    # Do not cause SyntaxError for invalid escape sequences in py37.
    # Those are caught/handled by pyupgrade, and not easy to filter with the
    # module being the filename (with .py removed).
    "default:invalid escape sequence:DeprecationWarning",
    # ignore use of unregistered marks, because we use many to test the implementation
    "ignore::_pytest.warning_types.PytestUnknownMarkWarning",]

[tool.black]
target-version = ['py37', 'py38', 'py39', 'py310']

[tool.isort]
profile = "black"
line_length = 100
lines_between_sections = 1
known_first_party = "tox"
skip = "migrations"

[tox]
envlist = test_package,typechecks,lint,readme
skipdist = True

[testenv]
allowlist_externals = echo
commands = echo "success"
isolated_build = True
skip_install = True
install_command = pip install {opts} {packages}
deps =
setenv =
    PYTHONPATH = {env:PYTHONPATH}{:}{toxinidir}
platform =
    linux: linux
    macos: darwin
    windows: win64
basepython = python3.8
paths_to_check =
    ./tools/python/kml
    ./tools/cython/kml

[testenv:readme]
description = check that the long description is valid
skip_install = true
deps =
    twine>=3.7.1
    wheel
    setuptools

extras =
commands =
    pip wheel -w {envtmpdir}/build .
    twine check {envtmpdir}/build/*

[testenv:test_package]
skip_install = true
deps =
    pytest
    pytest-xdist
    pytest-clarity
    pytest-cov
    pytest-randomly

# pytest doesn't seem to work correctly from tox. Just call the makefile.
commands=
    ; python -m pytest -v -c pyproject.toml -doctest -n auto {toxinidir}/tools/python/tests
    make test

[testenv:typechecks]
envdir = {toxworkdir}/test_package

deps =
    mypy
    pydantic

commands = {posargs:mypy} --exclude "tools/cython/kml/__init__.py" --config-file pyproject.toml {[testenv]paths_to_check}

[testenv:lint]
ignore_errors = true
envdir = {toxworkdir}/lint

deps =
    isort
	flake8
    flake8-bugbear
    flake8-builtins
    flake8-comprehensions
    flake8-string-format
    flake8-docstrings
    flake8-bandit
    black[jupyter]
    pydocstyle
    pylint
    toml

commands =
	flake8 {posargs:{[testenv]paths_to_check}}
	isort {posargs:{[testenv]paths_to_check}}
	black --config pyproject.toml --check --diff --color --extend-exclude "_version.py" {posargs:{[testenv]paths_to_check}}
	pydocstyle {posargs:{[testenv]paths_to_check}}
    pylint --rcfile pyproject.toml --ignore "_version.py" {posargs:{[testenv]paths_to_check}}

[flake8]
filename = *.py, *.pyx, *.pxd
per-file-ignores =
    *__init__.py:F401
extend-ignore = E999
max-line-length = 100
